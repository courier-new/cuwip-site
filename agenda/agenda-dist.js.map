{"version":3,"sources":["agenda.js"],"names":["progData","schedule","Array","eventTypes","$","getJSON","data","addAgenda","agendaContent","length","setTimeout","console","log","each","i","day","isLast","addDay","html","addLegend","daySection","college","events","eventObj","addEvent","e","eventCard","sname","addBasicInfo","addExpandedInfo","types","includes","shortDesc","debugHide","basicInfo","eType","push","name","required","timeStart","timeEnd","place","event","isTalk","isBreakout","shouldBeHidden","expandedInfo","addTalkDesc","addBreakoutOptions","component","speaker","speakerHome","speakerImg","speakerPage","URL","type","options","match","snum","parseInt","substr","t","id","breakouts","s","sessions","hasOwnProperty","special","toLowerCase","careerBreakouts","legend","sort","pn","charAt","toUpperCase","slice","on","window","width","target","hasClass","removeClass","addClass","click","parents","$eventItem","closest","find","slideUp","slideDown"],"mappings":"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","file":"agenda-dist.js","sourcesContent":["/**\r\n * agenda.js\r\n *\r\n * Parses program data from agenda.json and automatically populated agenda page in readable format.\r\n *\r\n * @author    Kelli Rockwell <kellirockwell@mail.com>\r\n * @since     File available since August 10th, 2017\r\n * @version   1.0.0\r\n */\r\n\r\n// Variable for storing all of the program data retrieved from json\r\nlet progData = {schedule: Array(0)};\r\n\r\n// Array for storing all the different event types for creating bubble legend\r\nlet eventTypes = [];\r\n\r\n// Read in agenda data from json\r\n$.getJSON('agenda.min.json', (data) => {\r\n   progData = data;\r\n   addAgenda();\r\n});\r\n\r\n// Function for populating the whole agenda via data read in from json\r\nconst addAgenda = () => {\r\n\tlet agendaContent = \"\";\r\n    // Wait until agenda data has been loaded\r\n\tif (!progData.schedule.length) {\r\n\t\tsetTimeout(() => {\r\n\t\t\tconsole.log('trying to fetch agenda again');\r\n\t\t\taddAgenda();\r\n\t\t}, 200);\r\n\t} else {\r\n\t\t// For each day of the schedule\r\n\t\t$(progData.schedule).each((i, day) => {\r\n            // Check if day is last day\r\n\t\t\tlet isLast = i === progData.schedule.length - 1;\r\n            // Add day to the agenda\r\n            agendaContent += addDay({\r\n                'day': day,\r\n                'isLast': isLast\r\n            });\r\n\t\t});\r\n\t\t// Fill agenda\r\n\t\t$('.agenda.spread').html(agendaContent);\r\n        // Add events legend\r\n\t    addLegend();\r\n\t}\r\n};\r\n\r\n// Adds a day to the agenda\r\nconst addDay = ({\r\n    'day': day,\r\n    'isLast': isLast\r\n}) => {\r\n    // Define day of week and institution of the day\r\n    let daySection = `<h1>${day.day}</h1>\r\n        <span class='campus reference'>${day.college}$</span>\r\n            <div class='day table'>\\n`;\r\n    // For each event in the day\r\n    $(day.events).each((i, eventObj) => {\r\n        // Add event to the agenda\r\n        daySection += addEvent(eventObj);\r\n    });\r\n    daySection += \"<!--end day table--></div>\\n\";\r\n    // Add separator except on last day\r\n    daySection += (!isLast) ? \"<div class='separator'></div>\" : \"\";\r\n    return daySection;\r\n};\r\n\r\n// Adds an event card to a day\r\nconst addEvent = (e) => {\r\n    // Add event card\r\n    let eventCard = `<div class='event ${e.sname}'>`;\r\n    // Add item name, time, place, and type designations\r\n    eventCard += addBasicInfo(e);\r\n    // Add expandable section with additional details for event\r\n    eventCard += addExpandedInfo({\r\n        'event': e,\r\n        'isTalk': e.types.includes(\"talk\"),\r\n        'isBreakout': e.types.includes(\"breakout\"),\r\n        'shouldBeHidden': !e.shortDesc.length || e.shortDesc === \"\" || e.debugHide\r\n    });\r\n    eventCard += `<!--end event card--></div>\\n`;\r\n    return eventCard;\r\n};\r\n\r\n// Adds name, time, place, and type designations for an event\r\nconst addBasicInfo = (e) => {\r\n    // Add container for event types\r\n    let basicInfo = `<div class='type bubbles'>\\n`;\r\n    $(e.types).each((i, eType) => {\r\n        // If event type is not yet part of legend array\r\n        if (!eventTypes.includes(eType)) {\r\n            // Add it\r\n            eventTypes.push(eType);\r\n        }\r\n        // Mark what type of event this is with span bubble element\r\n        basicInfo += `<span class='${eType}'></span>\\n`;\r\n    });\r\n    basicInfo += `<!--end type bubbles--></div>\\n<div class='info'>`;\r\n    // Add event name\r\n    basicInfo += `<span class='name ${e.sname}'>${e.name}`;\r\n    // Mark if event is Optional\r\n    basicInfo += (!e.required) ? ` <span class='optional'>(Optional)</span>` : ``;\r\n    basicInfo += `<!--end name span--></span>\\n`;\r\n    // Add event time\r\n    basicInfo += `<span class='time ${e.sname}'>${e.timeStart} - ${e.timeEnd}</span>`;\r\n    // Add event location\r\n    basicInfo += `<span class='place ${e.sname}'>${e.place}</span>`;\r\n    basicInfo += `<!--end info--></div>\\n`;\r\n    return basicInfo;\r\n};\r\n\r\n// Adds expandable section with additional details for an event\r\nconst addExpandedInfo = ({\r\n    'event': event,\r\n    'isTalk': isTalk,\r\n    'isBreakout': isBreakout,\r\n    'shouldBeHidden': shouldBeHidden\r\n}) => {\r\n    // Add desc/options element, if event is talk or breakout session\r\n    let expandedInfo = \"\";\r\n    if (isTalk && !shouldBeHidden) {\r\n        expandedInfo += addTalkDesc(event);\r\n    } else if (isBreakout && !shouldBeHidden) {\r\n        expandedInfo += addBreakoutOptions(event);\r\n    } else if (!shouldBeHidden) {\r\n        expandedInfo += `<div class='about'>\\n<div class='inside flex ${event.types[0]}'>\\n<div class='desc'>\\n`;\r\n        expandedInfo += `<p>${event.shortDesc}</p>\\n`;\r\n        expandedInfo += `<!--end desc--></div>\\n<!--end inside flex--></div>\\n<!-- end about--></div>`;\r\n    }\r\n    return expandedInfo;\r\n};\r\n\r\nconst addTalkDesc = (e) => {\r\n\tlet component = \"\";\r\n\tif (!e.speaker || e.speaker === \"TBD\" || e.debugHide) {\r\n\t\treturn component;\r\n\t} else {\r\n\t\tcomponent += \"<div class='about'>\\n<div class='inside flex \" + e.types[0] + \"'>\\n<div class='desc'>\\n\";\r\n\t\tcomponent += \"<h2>\" + e.speaker + \" <em>\" + e.speakerHome + \"</em></h2>\\n\";\r\n\t\tcomponent += \"<div class='lil-img'><img src='../img/\" + e.speakerImg + \"'></div>\\n\";\r\n\t\tcomponent += \"<p>\" + e.shortDesc + \" Visit her <a target='_blank' href='\" + e.speakerPage.URL + \"'>\" + e.speakerPage.type + \"</a> to learn more.</p>\\n\";\r\n\t\tcomponent += \"</div>\\n<div class='big-img'><img src='../img/\" + e.speakerImg + \"'></div>\\n</div>\\n</div>\\n\";\r\n\t\treturn component;\r\n\t}\r\n};\r\n\r\nconst addBreakoutOptions = (e) => {\r\n\tlet component = \"\";\r\n\tif (!e.options || e.options.length === 0 || e.debugHide) {\r\n\t\treturn component;\r\n   } else if (e.name.match(/breakout session \\d of \\d/i)) {\r\n      // Remember current breakout session number by extracting from session name (i.e. \"Breakout Session 1 of 3\" => 1)\r\n      let snum = parseInt(e.name.match(/\\d of \\d/)[0].substr(0, 1));\r\n\t\t// Label container with event types\r\n      component += \"<div class='about \";\r\n      for (let t = 0; t < e.types.length; t++) {\r\n         component += e.types[t];\r\n         component += (t + 1 === e.types.length) ? \"\" : \" \";\r\n      }\r\n      component += \"'>\\n<div class='inside flex'>\\n<ul>\\n\";\r\n      for (let id in progData.breakouts) {\r\n         // Store current breakout session data\r\n         let s = progData.breakouts[id];\r\n         // If breakout session is included in current session number\r\n         if (s.sessions.includes(snum)) {\r\n            // Add breakout session occurrences\r\n            component += \"<li>\\n<div class='occurrences'>\";\r\n            for (let i = 1; i < 4; i++) {\r\n               component += (s.sessions.includes(i)) ? `<span class='indicator true'>${i}</span>` : `<span class='indicator false'>${i}</span>`;\r\n            }\r\n            // Add breakout session info\r\n            component += \"</div>\\n<div class='details'><span class='session'>\" + s.name + \"</span>\";\r\n            // If breakout session has special property\r\n      \t\tif (s.hasOwnProperty(\"special\")) {\r\n      \t\t\tcomponent += \"<span class='label\";\r\n      \t\t\t// If breakout session is labeled as only occurring once\r\n      \t\t\tcomponent += (s.special.toLowerCase().includes(\"once\")) ? \" once'>\" : \"'>\";\r\n      \t\t\tcomponent += s.special + \"</span>\";\r\n            }\r\n         }\r\n   \t\tcomponent += \"</li>\\n\";\r\n      }\r\n\t\tcomponent += \"</ul>\\n</div>\\n</div>\\n\";\r\n\t\treturn component;\r\n\t} else if (e.name.match(/career/i)) {\r\n      // Label container with event types\r\n      component += \"<div class='about \";\r\n      for (let t = 0; t < e.types.length; t++) {\r\n         component += e.types[t];\r\n         component += (t + 1 === e.types.length) ? \"\" : \" \";\r\n      }\r\n      component += \"'>\\n<div class='inside flex'>\\n<ul>\\n\";\r\n      for (let id in progData.careerBreakouts) {\r\n         // Store current breakout session data\r\n         let s = progData.careerBreakouts[id];\r\n         // Add breakout session info\r\n         component += \"<li>\\n<div class='details'><span class='session'>&#8226;&emsp;\" + s.name + \"</span>\";\r\n   \t\tcomponent += \"</li>\\n\";\r\n      }\r\n\t\tcomponent += \"</ul>\\n</div>\\n</div>\\n\";\r\n\t\treturn component;\r\n   }\r\n};\r\n\r\n// Build and insert legend of event types using populated eventTypes array\r\nconst addLegend = () => {\r\n    let legend = \"\";\r\n    // Sort event types alphabetically\r\n\teventTypes.sort();\r\n\t// For each type of event\r\n\t$(eventTypes).each((i, eType) => {\r\n\t\t// Produce proper (readable) name for event type\r\n\t\tlet pn = eType;\r\n        // For certain events, proper name is specially formatted\r\n\t\tif (eType == \"breakout\") {\r\n\t\t\tpn = \"Breakout Session\";\r\n\t\t} else if (eType == \"free\") {\r\n\t\t\tpn = \"Free Time\";\r\n\t\t} else if (eType == \"misc\") {\r\n\t\t\tpn = \"Misc/Special\";\r\n\t\t} else if (eType == \"shuttle\") {\r\n\t\t\tpn = \"Shuttle Run\";\r\n\t\t} else {\r\n            // For all other events, just capitalize the first letter of non-proper name\r\n\t\t\tpn = pn.charAt(0).toUpperCase() + pn.slice(1);\r\n\t\t}\r\n\t\tlegend += `<div><span class='${eType}'></span>${pn}</div>\\n`;\r\n\t});\r\n    // Fill legend\r\n\t$('.event.types.legend').html(legend);\r\n};\r\n\r\n// Clicking on agenda event type bubble\r\n$('.agenda.spread').on('click', '.type.bubbles span', (e) => {\r\n\tif ($(window).width() <= 700) {\r\n\t\tif ($(e.target).hasClass('focused')) {\r\n\t\t\t$(e.target).removeClass('focused');\r\n\t\t} else {\r\n\t\t\t$(e.target).addClass('focused');\r\n\t\t}\r\n\t}\r\n});\r\n\r\n// On click anywhere outside event type bubble on mobile, close bubble\r\n$('html').click((e) => {\r\n   if (!$(e.target).parents('.type.bubbles').length && $(window).width() <= 700) {\r\n\t\t$('.type.bubbles span').removeClass('focused');\r\n   }\r\n});\r\n\r\n// Clicking agenda event will open event's details\r\n$('.agenda.spread').on('click', '.event', (e) => {\r\n    let $eventItem = $(e.target).closest('.event');\r\n   if ($eventItem.hasClass('expanded')) {\r\n       $eventItem.removeClass('expanded');\r\n       $eventItem.find('.about').slideUp();\r\n   } else {\r\n       $eventItem.addClass('expanded');\r\n       $eventItem.find('.about').slideDown();\r\n   }\r\n});\r\n\r\n/* End of agenda.js */\r\n"]}